UiFactoryInitializer
>>> empty file (patches 0)
<<<


>>> no matches (patches 0)
library foo;
var a = 'b';
class Foo {}
<<<
library foo;
var a = 'b';
class Foo {}


>>> public factory (patches 1)
@Factory() UiFactory Foo;
<<<
@Factory() UiFactory Foo = _$Foo;


>>> private factory (patches 1)
@Factory() UiFactory _Foo;
<<<
@Factory() UiFactory _Foo = _$_Foo;


>>> public factory initialized incorrectly (patches 1)
@Factory() UiFactory Foo = wrong;
<<<
@Factory() UiFactory Foo = _$Foo;


>>> private factory initialized incorrectly (patches 1)
@Factory() UiFactory _Foo = wrong;
<<<
@Factory() UiFactory _Foo = _$_Foo;


>>> public factory initialized correctly (patches 0)
@Factory() UiFactory Foo = _$Foo;
<<<
@Factory() UiFactory Foo = _$Foo;


>>> public factory initialized correctly with ignore (patches 0)
@Factory() UiFactory Foo =
    // ignore: undefined_identifier
    _$Foo;
<<<
@Factory() UiFactory Foo =
    // ignore: undefined_identifier
    _$Foo;


>>> private factory initialized correctly (patches 0)
@Factory() UiFactory _Foo = _$_Foo;
<<<
@Factory() UiFactory _Foo = _$_Foo;


>>> private factory initialized correctly with ignore (patches 0)
@Factory() UiFactory _Foo =
    // ignore: undefined_identifier
    _$_Foo;
<<<
@Factory() UiFactory _Foo =
    // ignore: undefined_identifier
    _$_Foo;


>>> ignores usages with an attached `// orcm_ignore` comment (patches 0)
// orcm_ignore
@Factory() UiFactory DontInitialize;
<<<
// orcm_ignore
@Factory() UiFactory DontInitialize;